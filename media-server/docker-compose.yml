services:
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 9696:9696 # prowlarr
      - 6767:6767 # bazarr
      - 8989:8989 # sonarr
      - 7878:7878 # radarr
      - 8082:8082 # qbit
      - 6881:6881 # qbit
      - 6881:6881/udp # qbit
    volumes:
      - ${VOLUME_PATH}/config/gluetun:/gluetun
    networks:
      - traefik-network
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - VPN_ENDPOINT_IP=${VPN_ENDPOINT_IP}
      - VPN_ENDPOINT_PORT=${VPN_ENDPOINT_PORT}
      - DNS_ADDRESS=${DNS_ADDRESS}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
    restart: unless-stopped
    labels:
      - traefik.enable=true

      - traefik.http.routers.qbittorrent.rule=Host(`${QBITTORRENT_SUB_DOMAIN}.${SERVER_DOMAIN}`)
      - traefik.http.routers.qbittorrent.entrypoints=websecure
      - traefik.http.routers.qbittorrent.service=qbittorrent
      - traefik.http.services.qbittorrent.loadbalancer.server.port=8082

      - traefik.http.routers.prowlarr.rule=Host(`${PROWLARR_SUB_DOMAIN}.${SERVER_DOMAIN}`)
      - traefik.http.routers.prowlarr.entrypoints=websecure
      - traefik.http.routers.prowlarr.service=prowlarr
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696

      - traefik.http.routers.sonarr.rule=Host(`${SONARR_SUB_DOMAIN}.${SERVER_DOMAIN}`)
      - traefik.http.routers.sonarr.entrypoints=websecure
      - traefik.http.routers.sonarr.service=sonarr
      - traefik.http.services.sonarr.loadbalancer.server.port=8989

      - traefik.http.routers.radarr.rule=Host(`${RADARR_SUB_DOMAIN}.${SERVER_DOMAIN}`)
      - traefik.http.routers.radarr.entrypoints=websecure
      - traefik.http.routers.radarr.service=radarr
      - traefik.http.services.radarr.loadbalancer.server.port=7878

      - traefik.http.routers.bazarr.rule=Host(`${BAZARR_SUB_DOMAIN}.${SERVER_DOMAIN}`)
      - traefik.http.routers.bazarr.entrypoints=websecure
      - traefik.http.routers.bazarr.service=bazarr
      - traefik.http.services.bazarr.loadbalancer.server.port=6767
    security_opt:
      - no-new-privileges:true

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: service:gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8082
      - UMASK=022
    volumes:
      - ${VOLUME_PATH}/config/qbittorrent:/config
      - ${VOLUME_PATH}/downloads:/downloads
    healthcheck:
      test: curl google.com || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - autoheal=true
      - homepage.group=Media
      - homepage.name=qBittorrent
      - homepage.icon=qbittorrent
      - homepage.href=${URL_SCHEME}://${QBITTORRENT_SUB_DOMAIN}.${SERVER_DOMAIN}
      - homepage.description=P2P BitTorrent client
      - homepage.widget.type=qbittorrent
      - homepage.widget.url=${URL_SCHEME}://${QBITTORRENT_SUB_DOMAIN}.${SERVER_DOMAIN}
      - homepage.widget.fields=["leech", "download", "seed", "upload"]

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    network_mode: service:gluetun
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${VOLUME_PATH}/config/prowlarr:/config
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    network_mode: service:gluetun
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${VOLUME_PATH}/config/sonarr:/config
      - ${VOLUME_PATH}/complete/tv:/tv
      - ${VOLUME_PATH}/downloads:/downloads
    depends_on:
      - prowlarr
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    network_mode: service:gluetun
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${VOLUME_PATH}/config/radarr:/config
      - ${VOLUME_PATH}/complete/movies:/movies
      - ${VOLUME_PATH}/downloads:/downloads
    depends_on:
      - prowlarr
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    network_mode: service:gluetun
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${VOLUME_PATH}/config/bazarr:/config
      - ${VOLUME_PATH}/complete/tv:/tv
      - ${VOLUME_PATH}/complete/movies:/movies
    depends_on:
      - sonarr
      - radarr
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${VOLUME_PATH}/config/jellyfin:/config
      - ${VOLUME_PATH}/complete/tv:/data/tvshows
      - ${VOLUME_PATH}/complete/movies:/data/movies
    ports:
      - 8096:8096
    networks:
      - traefik-network
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.rule=Host(`${JELLYFIN_SUB_DOMAIN}.${SERVER_DOMAIN}`)
      - traefik.http.routers.jellyfin.entrypoints=websecure
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
      - homepage.group=Media
      - homepage.name=Jellyfin
      - homepage.icon=jellyfin
      - homepage.href=${URL_SCHEME}://${JELLYFIN_SUB_DOMAIN}.${SERVER_DOMAIN}
      - homepage.description=Watch movies and TV shows.
      - homepage.widget.type=jellyfin
      - homepage.widget.url=${URL_SCHEME}://${JELLYFIN_SUB_DOMAIN}.${SERVER_DOMAIN}
      - homepage.widget.key=${JELLYFIN_API_KEY}
      - homepage.widget.enableBlocks=true
      - homepage.widget.enableNowPlaying=true
    security_opt:
      - no-new-privileges:true

  jellyseerr:
    container_name: jellyseerr
    image: fallenbagel/jellyseerr:latest
    ports:
      - 5055:5055
    volumes:
      - ${VOLUME_PATH}/config/jellyseerr:/app/config
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    networks:
      - traefik-network
    depends_on:
      - radarr
      - sonarr
      - jellyfin
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyseerr.rule=Host(`${JELLYSEERR_SUB_DOMAIN}.${SERVER_DOMAIN}`)
      - traefik.http.routers.jellyseerr.entrypoints=websecure
      - traefik.http.services.jellyseerr.loadbalancer.server.port=5055
      - homepage.group=Media
      - homepage.name=Jellyseerr
      - homepage.icon=jellyseerr
      - homepage.href=${URL_SCHEME}://${JELLYSEERR_SUB_DOMAIN}.${SERVER_DOMAIN}
      - homepage.description=Request movies and TV shows.
      - homepage.widget.type=jellyseerr
      - homepage.widget.url=${URL_SCHEME}://${JELLYSEERR_SUB_DOMAIN}.${SERVER_DOMAIN}
      - homepage.widget.key=${JELLYSEERR_API_KEY}
      - homepage.widget.fields=["pending", "approved", "available"]
    security_opt:
      - no-new-privileges:true

networks:
  traefik-network:
    external: true
